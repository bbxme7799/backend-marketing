// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int        @id @default(autoincrement())
  google_id        String?    @db.VarChar(255)
  username         String?    @db.VarChar(50)
  password         String?    @db.VarChar(255)
  email            String?    @db.VarChar(255)
  address          String?    @db.VarChar(255)
  address_for_paid String?    @db.VarChar(255)
  role             Int        @default(0)
  balance          Decimal    @default(0.00)
  is_banned        Boolean    @default(false)
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @updatedAt
  orders           Order[]
  cart_items       CartItem[]
  Post             Post[]
}

model Product {
  service          Int        @id
  category         String     @db.VarChar(255)
  name             String     @db.VarChar(255)
  description      String     @db.Text
  min              Int
  max              Int
  step             Int
  rate             Decimal    @default(0.00)
  type             String     @db.VarChar(50)
  average_delivery String     @db.VarChar(255)
  dripfeed         Boolean
  refill           Boolean
  cart_items       CartItem[]

  @@map("product")
}

model USD_rate {
  id         Int      @id @default(autoincrement())
  rate       Decimal  @default(0.00)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt

  @@map("usd_rate")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt

  @@fulltext([name])
  @@map("category")
}

model Order {
  id          Int         @id @default(autoincrement())
  user_id     Int
  total       Decimal     @default(0.00)
  user        User        @relation(fields: [user_id], references: [id])
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @updatedAt
  order_items OrderItem[]
}

model CartItem {
  id         Int     @id @default(autoincrement())
  user_id    Int
  user       User    @relation(fields: [user_id], references: [id])
  url        String
  quantity   Int     @default(0)
  product_id Int
  product    Product @relation(fields: [product_id], references: [service], onDelete: NoAction)
}

model OrderItem {
  id           Int      @id @default(autoincrement())
  // user_id      Int
  // user         User     @relation(fields: [user_id], references: [id])
  order_id     Int
  order        Order    @relation(fields: [order_id], references: [id])
  service_name String   @db.VarChar(255)
  quantity     Int      @default(0)
  price        Decimal  @default(0.00)
  ref_id       Int?
  is_paid      Boolean  @default(false)
  status       String
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @updatedAt
}

// product    Product @relation(fields: [product_id], references: [service], onDelete: NoAction)
model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  content   String   @db.Text
  imageUrl  String   @db.VarChar(255)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now()) @db.Timestamp(6)
}
